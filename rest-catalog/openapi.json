{
  "openapi": "3.0.0",
  "info": {
    "title": "rest-catalog",
    "version": "0.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Access token must contain rest-catalog as audience",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/api/v1/machines": {
      "get": {
        "tags": [
          "machines"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "List all machines",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "127.0.0.1"
            },
            "required": false,
            "name": "ip",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "example": 5055
            },
            "required": false,
            "name": "port",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "example": "127.0.0.1"
            },
            "required": false,
            "name": "externalIp",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "example": 5033
            },
            "required": false,
            "name": "externalPort",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "user"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of machines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          },
                          "ip": {
                            "type": "string",
                            "example": "127.0.0.1"
                          },
                          "port": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 5055
                          },
                          "externalIp": {
                            "type": "string",
                            "example": "127.0.0.1"
                          },
                          "externalPort": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 5033
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "ip",
                          "port",
                          "externalIp",
                          "externalPort",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "machines"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "machines"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new machine",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "user"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "example": "127.0.0.1"
                  },
                  "port": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 5055
                  },
                  "externalIp": {
                    "type": "string",
                    "example": "127.0.0.1"
                  },
                  "externalPort": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 5033
                  }
                },
                "required": [
                  "ip",
                  "port",
                  "externalIp",
                  "externalPort"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return machine created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "ip": {
                      "type": "string",
                      "example": "127.0.0.1"
                    },
                    "port": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 5055
                    },
                    "externalIp": {
                      "type": "string",
                      "example": "127.0.0.1"
                    },
                    "externalPort": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 5033
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "ip",
                    "port",
                    "externalIp",
                    "externalPort",
                    "createdAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/machines/{id}": {
      "get": {
        "tags": [
          "machines"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Get machine by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "user"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get machine by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "ip": {
                      "type": "string",
                      "example": "127.0.0.1"
                    },
                    "port": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 5055
                    },
                    "externalIp": {
                      "type": "string",
                      "example": "127.0.0.1"
                    },
                    "externalPort": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 5033
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "ip",
                    "port",
                    "externalIp",
                    "externalPort",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "machines"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update machine by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "user"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "example": "127.0.0.1"
                  },
                  "port": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 5055
                  },
                  "externalIp": {
                    "type": "string",
                    "example": "127.0.0.1"
                  },
                  "externalPort": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 5033
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Machine updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "ip": {
                      "type": "string",
                      "example": "127.0.0.1"
                    },
                    "port": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 5055
                    },
                    "externalIp": {
                      "type": "string",
                      "example": "127.0.0.1"
                    },
                    "externalPort": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 5033
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "ip",
                    "port",
                    "externalIp",
                    "externalPort",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "machines"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Delete machine by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Machine deleted"
          },
          "404": {
            "description": "Machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/machines/{id}/users": {
      "get": {
        "tags": [
          "machines"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Get machine's users. Same behaviour as 'GET /api/v1/machines/{id}?includes[]=user'.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns users linked to machine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          },
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "uuid",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "users"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "List all users",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false,
            "name": "uuid",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "machine"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "machine"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          },
                          "uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "uuid",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "users"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new user",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "machine"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "machine"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "uuid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return user created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "uuid",
                    "createdAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Get machine by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "machine"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "machine"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "uuid",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update user by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "machine"
                  },
                  "minItems": 0,
                  "maxItems": 1,
                  "example": [
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "machine"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "uuid",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Delete machine by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/machines": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Get user's machines",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns machines linked to users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          },
                          "ip": {
                            "type": "string",
                            "example": "127.0.0.1"
                          },
                          "port": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 5055
                          },
                          "externalIp": {
                            "type": "string",
                            "example": "127.0.0.1"
                          },
                          "externalPort": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 5033
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "ip",
                          "port",
                          "externalIp",
                          "externalPort",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "machines"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{userId}/machines/{machineId}": {
      "post": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Link user to machine",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "userId",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "machineId",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful linking"
          },
          "404": {
            "description": "User or machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User or machine not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Delete user machine",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "userId",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "machineId",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful unlinking"
          },
          "404": {
            "description": "User or machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User or machine not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "List all sessions",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "nullable": true,
                  "example": "2024-08-29T10:49:09.000Z"
                },
                {
                  "nullable": true
                },
                {
                  "nullable": true
                }
              ]
            },
            "required": false,
            "name": "closedAt",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "userId",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "machineId",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 2,
                  "example": [
                    "user",
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          },
                          "closedAt": {
                            "anyOf": [
                              {
                                "type": "string",
                                "nullable": true,
                                "example": "2024-08-29T10:49:09.000Z"
                              },
                              {
                                "nullable": true
                              },
                              {
                                "nullable": true
                              }
                            ]
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "minimum": 0,
                                "exclusiveMinimum": true
                              },
                              "uuid": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "uuid",
                              "createdAt"
                            ]
                          },
                          "machine": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "minimum": 0,
                                "exclusiveMinimum": true
                              },
                              "ip": {
                                "type": "string",
                                "example": "127.0.0.1"
                              },
                              "port": {
                                "type": "integer",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "example": 5055
                              },
                              "externalIp": {
                                "type": "string",
                                "example": "127.0.0.1"
                              },
                              "externalPort": {
                                "type": "integer",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "example": 5033
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "ip",
                              "port",
                              "externalIp",
                              "externalPort",
                              "createdAt"
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "closedAt",
                          "user",
                          "machine",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "sessions"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sessions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new session",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 2,
                  "example": [
                    "user",
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "machineId": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  }
                },
                "required": [
                  "userId",
                  "machineId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return new session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "closedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "nullable": true,
                          "example": "2024-08-29T10:49:09.000Z"
                        },
                        {
                          "nullable": true
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true
                        },
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "uuid",
                        "createdAt"
                      ]
                    },
                    "machine": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true
                        },
                        "ip": {
                          "type": "string",
                          "example": "127.0.0.1"
                        },
                        "port": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 5055
                        },
                        "externalIp": {
                          "type": "string",
                          "example": "127.0.0.1"
                        },
                        "externalPort": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 5033
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "ip",
                        "port",
                        "externalIp",
                        "externalPort",
                        "createdAt"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "closedAt",
                    "user",
                    "machine",
                    "createdAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Get session by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 2,
                  "example": [
                    "user",
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get session by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "closedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "nullable": true,
                          "example": "2024-08-29T10:49:09.000Z"
                        },
                        {
                          "nullable": true
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true
                        },
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "uuid",
                        "createdAt"
                      ]
                    },
                    "machine": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true
                        },
                        "ip": {
                          "type": "string",
                          "example": "127.0.0.1"
                        },
                        "port": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 5055
                        },
                        "externalIp": {
                          "type": "string",
                          "example": "127.0.0.1"
                        },
                        "externalPort": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 5033
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "ip",
                        "port",
                        "externalIp",
                        "externalPort",
                        "createdAt"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "closedAt",
                    "user",
                    "machine",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sessions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update session by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "machine"
                        ]
                      }
                    ],
                    "example": "user"
                  },
                  "minItems": 0,
                  "maxItems": 2,
                  "example": [
                    "user",
                    "machine"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    }
                  ],
                  "example": "user"
                }
              ]
            },
            "required": false,
            "name": "includes",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "closedAt": {
                    "anyOf": [
                      {
                        "type": "string",
                        "nullable": true,
                        "example": "2024-08-29T10:49:09.000Z"
                      },
                      {
                        "nullable": true
                      },
                      {
                        "nullable": true
                      }
                    ]
                  }
                },
                "required": [
                  "closedAt"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "closedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "nullable": true,
                          "example": "2024-08-29T10:49:09.000Z"
                        },
                        {
                          "nullable": true
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true
                        },
                        "uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "uuid",
                        "createdAt"
                      ]
                    },
                    "machine": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true
                        },
                        "ip": {
                          "type": "string",
                          "example": "127.0.0.1"
                        },
                        "port": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 5055
                        },
                        "externalIp": {
                          "type": "string",
                          "example": "127.0.0.1"
                        },
                        "externalPort": {
                          "type": "integer",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 5033
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "ip",
                        "port",
                        "externalIp",
                        "externalPort",
                        "createdAt"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "closedAt",
                    "user",
                    "machine",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Delete session by ID",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Session deleted"
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}